enum MotionCaptureEngine {
    MEDIAPIPE,
    CHORDATA
};

enum MotionCaptureType {
    BODY,
    FACE,
    HAND
};

enum EngineStatus {
    OFF,
    ON
};

interface Frontend {
//    oneway void chordata(in sequence<octet> data);
    oneway void faceBlendshapeNames(in sequence<string> faceBlendshapeNames);
    oneway void faceLandmarks(
        in sequence<float> landmarks,
        in sequence<float> blendshapes,
        in sequence<float> transform,
        in unsigned long long timestamp_ms);
};

interface Backend {
    void setFrontend(in Frontend frontend);
    void setEngine(in MotionCaptureEngine engine, in MotionCaptureType type, in EngineStatus status);
};
